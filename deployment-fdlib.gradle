def packageDesc = 'A bunch of utility code for manipulating native Linux file descriptors from Java'
def packageSite = 'https://github.com/chdir/fdutil'
def mainLic = 'Apache-2.0'
def libVcs = 'https://github.com/chdir/fdutil'
def xfdVer = '2.0'

def props = new Properties()

def propFile
def propName = project.properties.deploymentConfig
if(propName && (propFile = file(propName)).exists()) {
    new FileInputStream(propFile).withStream { InputStream is ->
        props.load(is)
    }
}

if (props) {
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    def pomXmlContents = new XmlParser().parseText """
        <dependencies>
            <dependency>
                <groupId>com.carrotsearch</groupId>
                <artifactId>hppc</artifactId>
                <version>0.7.1</version>
                <type>jar</type>
                <scope>compile</scope>
                <optional>false</optional>
            </dependency>
            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>zero-allocation-hashing</artifactId>
                <version>0.8</version>
                <type>jar</type>
                <scope>compile</scope>
                <optional>false</optional>
            </dependency>
        </dependencies>
    """

    publishing {
        publications {
            xfdbase(MavenPublication) {
                artifact ([
                        source: file("$buildDir/outputs/aar/fdlib-release.aar"),
                        extension: 'aar',
                ])
                artifact androidSourcesJar
                groupId 'net.sf.xfd'
                artifactId 'sysutils'
                version xfdVer

                pom.withXml { provider ->
                    provider.asNode().append(pomXmlContents)
                }
            }
        }
    }

    bintray {
        user = props['bintrayUser']
        key = props['bintrayKey']
        publications = ['xfdbase']

        pkg {
            repo = 'maven'
            name = 'xfd'
            desc = packageDesc
            websiteUrl = packageSite
            issueTrackerUrl = 'https://github.com/chdir/fdutil/issues'
            vcsUrl = libVcs
            licenses = [mainLic]
            labels = ['android']
            publicDownloadNumbers = true

            githubRepo = 'chdir/fdutil'

            version {
                name = xfdVer
                vcsTag = "v0.2"
            }

            publish = false
        }
    }

    tasks.bintrayUpload.dependsOn tasks.assemble
}